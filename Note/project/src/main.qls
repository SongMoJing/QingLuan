//  声明包管理文件为同级的qlpm.toml
$package_manager("./qlpm.toml")

// 设置输出编码为UTF-8
$output("utf-8")
// 设置入口函数为main
$start_fn(@fn.main)

// 导入类型和标准库
import ql::lang::type;
import ql::std::io;

// 定义模块
mod<pub> Main {
	// 定义类
	class<pub> Utils() {
		// 属性
		attr<pub> name = "Utils类";
		
		// 方法
		op<pub, type.String> getName() {
			return name;
		}

		// 内部类
		class<pub, static> Task() {
			// 构造函数
			init<pub>() {
				// 输出
				io.print("新对象.");
			}
		}
	}

	// 定义类
	class<pub> Hello(): Main::Utils {
		// 属性
		init() {
			self.name = "Hello类";
			for (let i = 0; i < 10; i++) {
				
			}
			const task = new Main::Utils.Task();
			io.print("新对象.");
		}

		// 方法
		op<pub, self> say() {
			io.print("Hello World!");
			return self;
		}
	}
}

/**
 * 入口函数
 */
fn<pub> main() {
	// 创建对象
	let obj = new Main::Hello().say();
	// 输出
	io.print(obj.getName());
}
